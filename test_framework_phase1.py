"""
–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø–µ—Ä–≤–æ–π —Ñ–∞–∑—ã User Guide Framework
"""

import sys
from pathlib import Path

# –î–æ–±–∞–≤–∏–º –ø—É—Ç—å –∫ –Ω–∞—à–µ–º—É —Ñ—Ä–µ–π–º–≤–æ—Ä–∫—É
sys.path.insert(0, str(Path(__file__).parent))

try:
    from src.gui.user_guide_framework.core.content_manager import ContentManager
    from src.gui.user_guide_framework.core.localization_manager import LocalizationManager
    from src.gui.user_guide_framework.core.navigation_manager import NavigationManager
    from src.gui.user_guide_framework.core.theme_manager import ThemeManager
except ImportError as e:
    print(f"Import error: {e}")
    print("Make sure the framework modules are properly installed")
    sys.exit(1)


def test_content_manager():
    """–¢–µ—Å—Ç ContentManager"""
    print("=== –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ ContentManager ===")

    data_dir = Path("src/gui/user_guide_framework/data")
    content_manager = ContentManager(data_dir)

    # –¢–µ—Å—Ç –∑–∞–≥—Ä—É–∑–∫–∏ TOC
    print(f"TOC –∑–∞–≥—Ä—É–∂–µ–Ω: {content_manager.toc_data is not None}")

    # –¢–µ—Å—Ç –ø–æ–ª—É—á–µ–Ω–∏—è –º–µ—Ç–∞–¥–∞–Ω–Ω—ã—Ö
    metadata = content_manager.get_metadata()
    print(f"–ó–∞–≥–æ–ª–æ–≤–æ–∫: {metadata.get('title')}")
    print(f"–î–æ—Å—Ç—É–ø–Ω—ã–µ —è–∑—ã–∫–∏: {metadata.get('languages')}")

    # –¢–µ—Å—Ç –∑–∞–≥—Ä—É–∑–∫–∏ –∫–æ–Ω—Ç–µ–Ω—Ç–∞
    intro_section = content_manager.get_section_content("introduction")
    if intro_section:
        print(f"–ó–∞–≥—Ä—É–∂–µ–Ω —Ä–∞–∑–¥–µ–ª: {intro_section.section_id}")
        print(f"–ó–∞–≥–æ–ª–æ–≤–æ–∫ (RU): {intro_section.title.get('ru')}")
        print(f"–ó–∞–≥–æ–ª–æ–≤–æ–∫ (EN): {intro_section.title.get('en')}")
        print(f"–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –±–ª–æ–∫–æ–≤ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ (RU): {len(intro_section.content.get('ru', []))}")

    # –¢–µ—Å—Ç –ø–æ–∏—Å–∫–∞
    search_results = content_manager.search_content("–¥–µ–∫–æ–Ω–≤–æ–ª—é—Ü–∏—è", "ru")
    print(f"–†–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –ø–æ–∏—Å–∫–∞ –¥–ª—è '–¥–µ–∫–æ–Ω–≤–æ–ª—é—Ü–∏—è': {len(search_results)}")

    print("ContentManager: ‚úì –£—Å–ø–µ—à–Ω–æ\n")


def test_navigation_manager():
    """–¢–µ—Å—Ç NavigationManager"""
    print("=== –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ NavigationManager ===")

    data_dir = Path("src/gui/user_guide_framework/data")
    content_manager = ContentManager(data_dir)
    nav_manager = NavigationManager(content_manager)

    # –¢–µ—Å—Ç —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
    print(f"–ö–æ—Ä–Ω–µ–≤—ã—Ö —É–∑–ª–æ–≤: {len(nav_manager.root_nodes)}")
    print(f"–í—Å–µ–≥–æ —É–∑–ª–æ–≤: {len(nav_manager.node_map)}")

    # –¢–µ—Å—Ç –ø–æ–ª—É—á–µ–Ω–∏—è —É–∑–ª–∞
    intro_node = nav_manager.get_node("introduction")
    if intro_node:
        print(f"–£–∑–µ–ª 'introduction': {intro_node.title.get('ru')}")
        print(f"–î–æ—á–µ—Ä–Ω–∏—Ö —É–∑–ª–æ–≤: {len(intro_node.children)}")

    # –¢–µ—Å—Ç breadcrumb
    breadcrumb = nav_manager.get_breadcrumb("deconvolution")
    print(f"Breadcrumb –¥–ª—è 'deconvolution': {[node.section_id for node in breadcrumb]}")

    # –¢–µ—Å—Ç –ø–ª–æ—Å–∫–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä—ã
    flat_structure = nav_manager.get_flat_structure("ru")
    print(f"–≠–ª–µ–º–µ–Ω—Ç–æ–≤ –≤ –ø–ª–æ—Å–∫–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä–µ: {len(flat_structure)}")

    # –¢–µ—Å—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –¥–µ—Ä–µ–≤–µ
    tree_info = nav_manager.get_tree_info()
    print(f"–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –¥–µ—Ä–µ–≤–µ: {tree_info}")

    print("NavigationManager: ‚úì –£—Å–ø–µ—à–Ω–æ\n")


def test_theme_manager():
    """–¢–µ—Å—Ç ThemeManager"""
    print("=== –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ ThemeManager ===")

    themes_dir = Path("src/gui/user_guide_framework/data/themes")
    theme_manager = ThemeManager(themes_dir)

    # –ó–∞–≥—Ä—É–∑–∫–∞ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Ç–µ–º
    theme_manager.load_available_themes()
    available_themes = theme_manager.get_available_themes()
    print(f"–î–æ—Å—Ç—É–ø–Ω—ã–µ —Ç–µ–º—ã: {available_themes}")

    # –¢–µ—Å—Ç —É—Å—Ç–∞–Ω–æ–≤–∫–∏ —Ç–µ–º—ã
    theme_manager.set_theme("dark")
    print(f"–¢–µ–∫—É—â–∞—è —Ç–µ–º–∞: {theme_manager.get_current_theme_name()}")

    # –¢–µ—Å—Ç –ø–æ–ª—É—á–µ–Ω–∏—è —Ü–≤–µ—Ç–æ–≤
    primary_color = theme_manager.get_color("primary")
    print(f"–û—Å–Ω–æ–≤–Ω–æ–π —Ü–≤–µ—Ç (—Ç—ë–º–Ω–∞—è —Ç–µ–º–∞): {primary_color.name()}")

    # –¢–µ—Å—Ç –ø–æ–ª—É—á–µ–Ω–∏—è —à—Ä–∏—Ñ—Ç–æ–≤
    heading_font = theme_manager.get_font("heading")
    print(f"–®—Ä–∏—Ñ—Ç –∑–∞–≥–æ–ª–æ–≤–∫–∞: {heading_font.family()}, {heading_font.pointSize()}pt")

    # –¢–µ—Å—Ç –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Å—Ç–∏–ª–µ–π
    button_style = theme_manager.generate_stylesheet("QPushButton")
    print(f"–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω —Å—Ç–∏–ª—å –¥–ª—è –∫–Ω–æ–ø–∫–∏: {len(button_style)} —Å–∏–º–≤–æ–ª–æ–≤")

    print("ThemeManager: ‚úì –£—Å–ø–µ—à–Ω–æ\n")


def test_localization_manager():
    """–¢–µ—Å—Ç LocalizationManager"""
    print("=== –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ LocalizationManager ===")

    lang_dir = Path("src/gui/user_guide_framework/data/lang")
    loc_manager = LocalizationManager(lang_dir, "ru")

    # –ó–∞–≥—Ä—É–∑–∫–∞ —è–∑—ã–∫–æ–≤
    loc_manager.load_available_languages()
    available_langs = loc_manager.get_available_languages()
    print(f"–î–æ—Å—Ç—É–ø–Ω—ã–µ —è–∑—ã–∫–∏: {available_langs}")

    # –¢–µ—Å—Ç –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–µ–∫—Å—Ç–∞
    search_text = loc_manager.get_text("ui_search")
    print(f"–¢–µ–∫—Å—Ç 'ui_search' (RU): {search_text}")

    # –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–∏–π
    loc_manager.set_language("en")
    search_text_en = loc_manager.get_text("ui_search")
    print(f"–¢–µ–∫—Å—Ç 'ui_search' (EN): {search_text_en}")

    # –¢–µ—Å—Ç —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    formatted_text = loc_manager.get_text("search_found", count=5)
    print(f"–§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç: {formatted_text}")

    # –¢–µ—Å—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è –ø–µ—Ä–µ–≤–æ–¥–∞
    has_translation = loc_manager.has_translation("ui_search")
    print(f"–°—É—â–µ—Å—Ç–≤—É–µ—Ç –ø–µ—Ä–µ–≤–æ–¥ –¥–ª—è 'ui_search': {has_translation}")

    # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —è–∑—ã–∫–µ
    lang_info = loc_manager.get_language_info("ru")
    print(f"–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ: {lang_info}")

    print("LocalizationManager: ‚úì –£—Å–ø–µ—à–Ω–æ\n")


def test_integration():
    """–¢–µ—Å—Ç –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ –≤—Å–µ—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤"""
    print("=== –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ ===")

    data_dir = Path("src/gui/user_guide_framework/data")

    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –≤—Å–µ—Ö –º–µ–Ω–µ–¥–∂–µ—Ä–æ–≤
    content_manager = ContentManager(data_dir)
    nav_manager = NavigationManager(content_manager)
    theme_manager = ThemeManager(data_dir / "themes")
    loc_manager = LocalizationManager(data_dir / "lang", "ru")

    # –ó–∞–≥—Ä—É–∑–∫–∞ –≤—Å–µ—Ö —Ä–µ—Å—É—Ä—Å–æ–≤
    theme_manager.load_available_themes()
    loc_manager.load_available_languages()

    print("–í—Å–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω—ã —É—Å–ø–µ—à–Ω–æ")  # –¢–µ—Å—Ç —Ä–∞–±–æ—Ç—ã —Å —Ä–µ–∞–ª—å–Ω—ã–º –∫–æ–Ω—Ç–µ–Ω—Ç–æ–º
    deconv_section = content_manager.get_section_content("deconvolution")
    if deconv_section:
        # –ü–æ–ª—É—á–µ–Ω–∏–µ –ª–æ–∫–∞–ª–∏–∑–æ–≤–∞–Ω–Ω–æ–≥–æ –∑–∞–≥–æ–ª–æ–≤–∫–∞
        title_key = f"nav_{deconv_section.section_id}"
        localized_title = loc_manager.get_text(title_key)
        print(f"–õ–æ–∫–∞–ª–∏–∑–æ–≤–∞–Ω–Ω—ã–π –∑–∞–≥–æ–ª–æ–≤–æ–∫: {localized_title}")

        # –¢–µ—Å—Ç –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
        deconv_node = nav_manager.get_node("deconvolution")
        if deconv_node:
            print(f"–£–∑–µ–ª –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –Ω–∞–π–¥–µ–Ω: {deconv_node.node_id}")

        # –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ —Ç–µ–º—ã
        theme_manager.set_theme("default")
        text_color = theme_manager.get_color("text_primary")
        print(f"–¶–≤–µ—Ç —Ç–µ–∫—Å—Ç–∞ –∏–∑ —Ç–µ–º—ã: {text_color.name()}")

    print("–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è: ‚úì –£—Å–ø–µ—à–Ω–æ\n")


if __name__ == "__main__":
    print("–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ User Guide Framework - –§–∞–∑–∞ 1\n")

    try:
        test_content_manager()
        test_navigation_manager()
        test_theme_manager()
        test_localization_manager()
        test_integration()

        print("üéâ –í—Å–µ —Ç–µ—Å—Ç—ã –ø–µ—Ä–≤–æ–π —Ñ–∞–∑—ã –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ!")
        print("\n–ì–æ—Ç–æ–≤–æ –∫ –ø–µ—Ä–µ—Ö–æ–¥—É –∫–æ –≤—Ç–æ—Ä–æ–π —Ñ–∞–∑–µ: –°–∏—Å—Ç–µ–º–∞ —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥–∞")

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏: {e}")
        import traceback

        traceback.print_exc()
