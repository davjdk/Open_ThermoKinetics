"""
–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ç—Ä–µ—Ç—å–µ–π —Ñ–∞–∑—ã User Guide Framework - UI Layer
"""

import sys
from pathlib import Path

from PyQt6.QtWidgets import QApplication, QMainWindow, QVBoxLayout, QWidget

# –î–æ–±–∞–≤–∏–º –ø—É—Ç—å –∫ –Ω–∞—à–µ–º—É —Ñ—Ä–µ–π–º–≤–æ—Ä–∫—É
sys.path.insert(0, str(Path(__file__).parent))

try:
    # –ò–º–ø–æ—Ä—Ç —Ñ–∞–∑—ã 3 (UI Layer)
    # –ò–º–ø–æ—Ä—Ç —Ñ–∞–∑ 1-2 (—É–∂–µ –≥–æ—Ç–æ–≤—ã)
    from src.gui.user_guide_framework.core.content_manager import ContentManager
    from src.gui.user_guide_framework.core.localization_manager import LocalizationManager
    from src.gui.user_guide_framework.core.navigation_manager import NavigationManager
    from src.gui.user_guide_framework.core.theme_manager import ThemeManager
    from src.gui.user_guide_framework.rendering.renderer_manager import RendererManager
    from src.gui.user_guide_framework.ui.content_widget import ContentWidget
    from src.gui.user_guide_framework.ui.guide_framework import GuideFramework
    from src.gui.user_guide_framework.ui.guide_toolbar import GuideToolBar
    from src.gui.user_guide_framework.ui.navigation_sidebar import NavigationSidebar
    from src.gui.user_guide_framework.ui.status_widget import StatusWidget

except ImportError as e:
    print(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞: {e}")
    print("–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤—Å–µ –º–æ–¥—É–ª–∏ —Ñ—Ä–µ–π–º–≤–æ—Ä–∫–∞ —Å–æ–∑–¥–∞–Ω—ã")
    sys.exit(1)


def test_ui_components():
    """–¢–µ—Å—Ç –æ—Ç–¥–µ–ª—å–Ω—ã—Ö UI –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤"""
    print("=== –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ UI –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ ===")

    app = QApplication(sys.argv)

    # –ü—É—Ç—å –∫ –¥–∞–Ω–Ω—ã–º
    data_directory = Path("src/gui/user_guide_framework/data")

    try:
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –º–µ–Ω–µ–¥–∂–µ—Ä–æ–≤
        content_manager = ContentManager(data_directory)
        navigation_manager = NavigationManager(content_manager)
        theme_manager = ThemeManager(data_directory / "themes")
        localization_manager = LocalizationManager(data_directory / "lang")
        renderer_manager = RendererManager(theme_manager)

        print("‚úì –ú–µ–Ω–µ–¥–∂–µ—Ä—ã –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω—ã")
        # –¢–µ—Å—Ç NavigationSidebar
        navigation_sidebar = NavigationSidebar(navigation_manager, theme_manager)
        assert navigation_sidebar is not None  # –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
        print("‚úì NavigationSidebar —Å–æ–∑–¥–∞–Ω")

        # –¢–µ—Å—Ç ContentWidget
        content_widget = ContentWidget(content_manager, renderer_manager, localization_manager)
        assert content_widget is not None  # –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
        print("‚úì ContentWidget —Å–æ–∑–¥–∞–Ω")

        # –¢–µ—Å—Ç GuideToolBar
        toolbar = GuideToolBar(localization_manager, theme_manager)
        assert toolbar is not None  # –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
        print("‚úì GuideToolBar —Å–æ–∑–¥–∞–Ω")

        # –¢–µ—Å—Ç StatusWidget
        status_widget = StatusWidget(theme_manager)
        assert status_widget is not None  # –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
        print("‚úì StatusWidget —Å–æ–∑–¥–∞–Ω")

        print("\n‚úÖ –í—Å–µ UI –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω—ã!")
        return True

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ UI –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤: {e}")
        import traceback

        traceback.print_exc()
        return False
    finally:
        app.quit()


def test_guide_framework():
    """–¢–µ—Å—Ç –≥–ª–∞–≤–Ω–æ–≥–æ —Ñ—Ä–µ–π–º–≤–æ—Ä–∫–∞"""
    print("\n=== –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ GuideFramework ===")

    app = QApplication(sys.argv)

    # –ü—É—Ç—å –∫ –¥–∞–Ω–Ω—ã–º
    data_directory = Path("src/gui/user_guide_framework/data")

    try:
        # –°–æ–∑–¥–∞–Ω–∏–µ –≥–ª–∞–≤–Ω–æ–≥–æ —Ñ—Ä–µ–π–º–≤–æ—Ä–∫–∞
        framework = GuideFramework(data_directory)
        print("‚úì GuideFramework —Å–æ–∑–¥–∞–Ω")

        # –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Å–Ω–æ–≤–Ω—ã—Ö –º–µ—Ç–æ–¥–æ–≤
        current_language = framework.get_current_language()
        print(f"‚úì –¢–µ–∫—É—â–∏–π —è–∑—ã–∫: {current_language}")

        current_section = framework.get_current_section()
        print(f"‚úì –¢–µ–∫—É—â–∏–π —Ä–∞–∑–¥–µ–ª: {current_section}")

        # –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–º–µ–Ω—ã —è–∑—ã–∫–∞
        framework.set_language("en")
        print("‚úì –Ø–∑—ã–∫ –∏–∑–º–µ–Ω–µ–Ω –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–∏–π")

        framework.set_language("ru")
        print("‚úì –Ø–∑—ã–∫ –∏–∑–º–µ–Ω–µ–Ω –Ω–∞ —Ä—É—Å—Å–∫–∏–π")

        print("\n‚úÖ GuideFramework —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!")
        return True

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ GuideFramework: {e}")
        import traceback

        traceback.print_exc()
        return False
    finally:
        app.quit()


def create_demo_window():
    """–°–æ–∑–¥–∞–Ω–∏–µ –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω–æ–≥–æ –æ–∫–Ω–∞"""
    print("\n=== –°–æ–∑–¥–∞–Ω–∏–µ –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω–æ–≥–æ –æ–∫–Ω–∞ ===")

    app = QApplication(sys.argv)

    # –ü—É—Ç—å –∫ –¥–∞–Ω–Ω—ã–º
    data_directory = Path("src/gui/user_guide_framework/data")

    try:
        # –°–æ–∑–¥–∞–Ω–∏–µ –≥–ª–∞–≤–Ω–æ–≥–æ –æ–∫–Ω–∞
        main_window = QMainWindow()
        main_window.setWindowTitle("User Guide Framework - Phase 3 Demo")
        main_window.setMinimumSize(1200, 700)

        # –°–æ–∑–¥–∞–Ω–∏–µ —Ü–µ–Ω—Ç—Ä–∞–ª—å–Ω–æ–≥–æ –≤–∏–¥–∂–µ—Ç–∞
        central_widget = QWidget()
        main_window.setCentralWidget(central_widget)

        layout = QVBoxLayout(central_widget)
        layout.setContentsMargins(0, 0, 0, 0)

        # –°–æ–∑–¥–∞–Ω–∏–µ –∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ñ—Ä–µ–π–º–≤–æ—Ä–∫–∞
        framework = GuideFramework(data_directory)
        layout.addWidget(framework)

        print("‚úì –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω–æ–µ –æ–∫–Ω–æ —Å–æ–∑–¥–∞–Ω–æ")

        # –ü–æ–∫–∞–∑ –æ–∫–Ω–∞
        main_window.show()
        print("‚úì –û–∫–Ω–æ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–æ")

        print("\nüéâ –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∑–∞–ø—É—â–µ–Ω–æ!")
        print("–ó–∞–∫—Ä–æ–π—Ç–µ –æ–∫–Ω–æ –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è.")

        # –ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
        sys.exit(app.exec())

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω–æ–≥–æ –æ–∫–Ω–∞: {e}")
        import traceback

        traceback.print_exc()
        return False


def test_signal_connections():
    """–¢–µ—Å—Ç —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–π —Å–∏–≥–Ω–∞–ª–æ–≤"""
    print("\n=== –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–π —Å–∏–≥–Ω–∞–ª–æ–≤ ===")

    app = QApplication(sys.argv)

    data_directory = Path("src/gui/user_guide_framework/data")

    try:
        framework = GuideFramework(data_directory)

        # –°—á–µ—Ç—á–∏–∫–∏ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–∏–≥–Ω–∞–ª–æ–≤
        signal_counts = {"section_changed": 0, "language_changed": 0}

        def on_section_changed(section_id):
            signal_counts["section_changed"] += 1
            print(f"  üì° –°–∏–≥–Ω–∞–ª section_changed: {section_id}")

        def on_language_changed(language):
            signal_counts["language_changed"] += 1
            print(f"  üì° –°–∏–≥–Ω–∞–ª language_changed: {language}")

        # –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö —Å–ª–æ—Ç–æ–≤
        framework.section_changed.connect(on_section_changed)
        framework.language_changed.connect(on_language_changed)

        # –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —ç–º–∏—Å—Å–∏–∏ —Å–∏–≥–Ω–∞–ª–æ–≤
        framework.navigation_sidebar.section_selected.emit("test_section")
        framework.navigation_sidebar.language_changed.emit("en")

        print("‚úì –°–∏–≥–Ω–∞–ª—ã –ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω—ã:")
        print(f"  - section_changed: {signal_counts['section_changed']}")
        print(f"  - language_changed: {signal_counts['language_changed']}")

        return signal_counts["section_changed"] > 0 and signal_counts["language_changed"] > 0

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ —Å–∏–≥–Ω–∞–ª–æ–≤: {e}")
        return False
    finally:
        app.quit()


def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    print("üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è User Guide Framework - Phase 3 (UI Layer)")
    print("=" * 70)

    results = []

    # –¢–µ—Å—Ç UI –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
    results.append(test_ui_components())

    # –¢–µ—Å—Ç –≥–ª–∞–≤–Ω–æ–≥–æ —Ñ—Ä–µ–π–º–≤–æ—Ä–∫–∞
    results.append(test_guide_framework())

    # –¢–µ—Å—Ç —Å–∏–≥–Ω–∞–ª–æ–≤
    results.append(test_signal_connections())

    # –°–≤–æ–¥–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
    print("\n" + "=" * 70)
    print("üìä –°–í–û–î–ö–ê –†–ï–ó–£–õ–¨–¢–ê–¢–û–í –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø")
    print("=" * 70)

    passed = sum(results)
    total = len(results)

    if passed == total:
        print(f"‚úÖ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–π–¥–µ–Ω—ã: {passed}/{total}")
        print("\nüéâ –§–∞–∑–∞ 3 (UI Layer) —É—Å–ø–µ—à–Ω–æ —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–∞!")

        # –ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ –¥–µ–º–æ
        response = input("\nüí° –•–æ—Ç–∏—Ç–µ –∑–∞–ø—É—Å—Ç–∏—Ç—å –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ? (y/n): ")
        if response.lower() in ["y", "yes", "–¥–∞"]:
            create_demo_window()

    else:
        print(f"‚ùå –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Ç–µ—Å—Ç—ã –Ω–µ –ø—Ä–æ–π–¥–µ–Ω—ã: {passed}/{total}")
        print("\nüîß –¢—Ä–µ–±—É–µ—Ç—Å—è –¥–æ—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤")

    return passed == total


if __name__ == "__main__":
    success = main()
    sys.exit(0 if success else 1)
